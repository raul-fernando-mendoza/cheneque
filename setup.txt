#deploy function to cloud functions
gcloud functions deploy chenequeRequest --runtime python39 --trigger-http --allow-unauthenticated --security-level=secure-optional

//show the project app will apply to
gcloud config list

//use in case you what to change something

//deploy to app
gcloud app deploy


#copy the json data from firebaseConfig  into an environment variable (use " to enclose all names): DEV_GOOGLE_APPLICATION_CREDENTIALS


#to create a virtual environment
python3.9 -m venv venv
Â·and then select it in the python interpreter in visual studio code browse for it. it apears at the end of the list

#first upgrade pip
python -m pip install --upgrade pip

apt install python3.7.3
apt install python3-pip python3-setuptools python3.7-venv

apt install python-pip python-setuptools python-venv
or 
sudo pip install virtualenv


curl https://bootstrap.pypa.io/pip/2.7/get-pip.py --output get-pip.py
sudo python2 get-pip.py

ls /usr/bin/python*

update-alternatives --list python3

update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7  0

update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9  0

update-alternatives --remove python3 /usr/bin/python3.7  0

update-alternatives --install /usr/bin/python python /usr/bin/python2  0

python3.7 -m venv /path/to/venv
python -m venv cheneque27
 virtualenv env

##### python 3.9
sudo add-apt-repository ppa:deadsnakes/ppa 
sudo apt update 
sudo apt install python3.9
python3.9 -V 

sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9  0

sudo apt install python3-pip
sudo apt-get install python3.9-dev python3.9-venv
python3.9 -m venv venv

python -m pip install Flask
python -m pip install flask_json
python -m pip install flask_cors
python -m pip install pymysql
python -m pip install firebase_admin

python3 -m pip freeze > requirements.txt
gcloud init
gcloud app deploy

/*********************************************/
<VirtualHost *:10000>
	ServerAdmin webmaster@localhost
	DocumentRoot /var/www/cgi-bin/

	ErrorLog ${APACHE_LOG_DIR}/error.log
	CustomLog ${APACHE_LOG_DIR}/access.log combined

       WSGIProcessGroup myapps
       WSGIApplicationGroup %{GLOBAL}

       WSGIDaemonProcess myapps user=odroid group=odroid threads=5 python-home=/var/www/cgi-bin/venv392
       #WSGIScriptAlias /api/ /var/www/cgi-bin/myapp.wsgi
    
       WSGIScriptAlias /api /var/www/cgi-bin/mysql_connect.wsgi
       <Directory /var/www/cgi-bin>
          Require all granted
       </Directory>		
</VirtualHost>
/*************************************************/
